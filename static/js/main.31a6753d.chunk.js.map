{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31a6753d.chunk.js","sourcesContent":["import {MdDeleteForever} from 'react-icons/md';\n\nconst Note = ({id,text,date,handleDeleteNote}) => {\n    return(\n        <div className=\"note\">\n            <span> {text} </span>\n            <div className =\"note-footer\">\n            <small>{date}</small>\n            <MdDeleteForever \n            onClick = {() => handleDeleteNote(id)} \n            className = 'delete-icon' \n            size = '1.3em' />\n            </div>\n                \n\n        </div>\n    )\n};\n\nexport default Note;","import {useState} from 'react';\n\nconst AddNote = ({handleAddNote}) => {\n    const [noteText,setNoteText] = useState('');\n    const characterLimit = 200;\n\n    const handleChange = (event) => {\n        if(characterLimit- event.target.value.length >= 0){\n        setNoteText(event.target.value);\n        }\n    }\n    const handleSaveClick = () => {\n        if(noteText.trim().length>0){\n        handleAddNote(noteText);\n        setNoteText(''); // and resets the textarea input\n        }\n    }\n    // here we want the state to be updated with the new note \n// but the state is in app.js so the child does\n//  not know how to update the state hence we pass a func in appjs then pass it down components\n\n    return(<div className = \"note new\">\n            <textarea \n            rows='8' \n            cols = '10' \n            placeholder = 'type to add a note'\n            value = {noteText}\n            onChange = {handleChange}\n            ></textarea>\n            <div className = \"note-footer\">\n                <small> {characterLimit- noteText.length} Remaining</small>\n                <button className = 'save' onClick = {handleSaveClick}> SAVE </button>\n            </div>\n    </div>)\n} \n\nexport default AddNote;","import Note from './Note';\nimport AddNote from './AddNote';\nconst NotesList = ({ notes,handleAddNote ,handleDeleteNote})  => {\n    return(\n        <div className = \"notes-list\">\n            {notes.map((note)=> (\n            <Note  \n            id = {note.id} \n            text = {note.text} \n            date = {note.date}\n            handleDeleteNote = {handleDeleteNote}\n            />\n            ))}\n            <AddNote handleAddNote = {handleAddNote}/>\n        </div>\n    )\n};\n\nexport default NotesList;","import React from 'react';\nimport {MdSearch} from 'react-icons/md';\nconst Search = ({handleSearchNote}) =>{\n    return <div className = \"search\">\n        <MdSearch className=\"search-icons\" size = '1.3em'/>\n        <input \n        onChange = {(event)=>\n            handleSearchNote(event.target.value)\n        } \n        type = \"text\" \n        placeholder = \"Type to search...\"/>\n\n    </div>\n}\n\nexport default Search;","import React from 'react';\n\nconst Header = ({ handleToggleDarkMode }) => {\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h1>Notes</h1>\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\thandleToggleDarkMode(\n\t\t\t\t\t\t(previousDarkMode) => !previousDarkMode\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tclassName='save'\n\t\t\t>\n\t\t\t\tToggle Mode\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","import {useState,useEffect} from 'react';\nimport {nanoid} from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\nconst App = () => {\n  const [notes,setNotes] = useState([ /*here notes is the main array notelist */\n    {\n      id:nanoid(),\n      text : \"my first note\",\n      date: \"11/11/2021\"\n    },\n    {\n      id:nanoid(),\n      text : \"my second note\",\n      date: \"10/11/2021\"\n    },{\n      id:nanoid(),\n      text : \"my first note\",\n      date: \"12/11/2021\"\n    }\n  ]);\n\n  const [searchText,setSearchText] = useState('');\n\n  const[darkMode,setDarkMode] = useState(false);\n\n  useEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t}\n\t}, []);\n  \n  useEffect(() => {\n    localStorage.setItem (\n      'react-notes-app-data',JSON.stringify(notes)\n      );\n  }, [notes])\n\n// this add note func has been passed down notes list and into add \n//  note this is called prop drilling we could also us econtext api\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text:text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes,newNote]; /*new array created with new note added */\n    setNotes(newNotes);/*here we use statefunc since the list has changed or the state has changed the the hook will rerender */\n  };\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note)=> note.id !==id); \n    setNotes(newNotes);/** used to render the changes , \n    here also we pass the functn down the tree */\n    // we use filter o notes array t remove the  \n  }\n  // we will pass this to the notes list down to the children\n\n  \n\n    return  (\n      <div className = {`${darkMode && 'dark-mode '}`}>\n        <div className=\"container\">\n      <Header handleToggleDarkMode={setDarkMode} />\n      <Search handleSearchNote = { setSearchText }/>\n      <NotesList notes = {notes.filter((note)=> \n      note.text.toLowerCase().includes(searchText)\n      )}  \n      handleAddNote = {addNote}\n      handleDeleteNote = {deleteNote}\n      />\n    </div>\n      </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}